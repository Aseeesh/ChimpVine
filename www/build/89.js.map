{"version":3,"sources":["../../src/addon/mod/lesson/pages/player/player.module.ts","../../src/addon/mod/lesson/pages/player/player.ts"],"names":[],"mappings":"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","file":"89.js","sourcesContent":["// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModLessonPlayerPage } from './player';\nimport { CoreEditorComponentsModule } from '@core/editor/components/components.module';\n\n@NgModule({\n    declarations: [\n        AddonModLessonPlayerPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreEditorComponentsModule,\n        IonicPageModule.forChild(AddonModLessonPlayerPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModLessonPlayerPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/lesson/pages/player/player.module.ts","// (C) Copyright 2015 Moodle Pty Ltd.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { IonicPage, NavParams, Content, PopoverController, ModalController, Modal, NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider, CoreSitesReadingStrategy } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { MoodleMobileApp } from '../../../../../app/app.component';\nimport { AddonModLessonProvider } from '../../providers/lesson';\nimport { AddonModLessonOfflineProvider } from '../../providers/lesson-offline';\nimport { AddonModLessonSyncProvider } from '../../providers/lesson-sync';\nimport { AddonModLessonHelperProvider } from '../../providers/helper';\n\n/**\n * Page that allows attempting and reviewing a lesson.\n */\n@IonicPage({ segment: 'addon-mod-lesson-player' })\n@Component({\n    selector: 'page-addon-mod-lesson-player',\n    templateUrl: 'player.html',\n})\nexport class AddonModLessonPlayerPage implements OnInit, OnDestroy {\n    @ViewChild(Content) content: Content;\n    @ViewChild('questionFormEl') formElement: ElementRef;\n\n    component = AddonModLessonProvider.COMPONENT;\n    LESSON_EOL = AddonModLessonProvider.LESSON_EOL;\n    questionForm: FormGroup; // The FormGroup for question pages.\n    title: string; // The page title.\n    lesson: any; // The lesson object.\n    currentPage: number; // Current page being viewed.\n    review: boolean; // Whether the user is reviewing.\n    messages: any[]; // Messages to display to the user.\n    menuModal: Modal; // Modal to navigate through the pages.\n    canManage: boolean; // Whether the user can manage the lesson.\n    retake: number; // Current retake number.\n    showRetake: boolean; // Whether the retake number needs to be displayed.\n    lessonWidth: string; // Width of the lesson (if slideshow mode).\n    lessonHeight: string; // Height of the lesson (if slideshow mode).\n    endTime: number; // End time of the lesson if it's timed.\n    pageData: any; // Current page data.\n    pageContent: string; // Current page contents.\n    pageButtons: any[]; // List of buttons of the current page.\n    question: any; // Question of the current page (if it's a question page).\n    eolData: any; // Data for EOL page (if current page is EOL).\n    processData: any; // Data to display after processing a page.\n    loaded: boolean; // Whether data has been loaded.\n    displayMenu: boolean; // Whether the lesson menu should be displayed.\n    originalData: any; // Original question data. It is used to check if data has changed.\n\n    protected courseId: number; // The course ID the lesson belongs to.\n    protected lessonId: number; // Lesson ID.\n    protected password: string; // Lesson password (if any).\n    protected forceLeave = false; // If true, don't perform any check when leaving the view.\n    protected offline: boolean; // Whether we are in offline mode.\n    protected accessInfo: any; // Lesson access info.\n    protected jumps: any; // All possible jumps.\n    protected mediaFile: any; // Media file of the lesson.\n    protected firstPageLoaded: boolean; // Whether the first page has been loaded.\n    protected loadingMenu: boolean; // Whether the lesson menu is being loaded.\n    protected lessonPages: any[]; // Lesson pages (for the lesson menu).\n\n    constructor(protected navParams: NavParams, protected translate: TranslateService,\n            protected eventsProvider: CoreEventsProvider, protected sitesProvider: CoreSitesProvider,\n            protected syncProvider: CoreSyncProvider, protected domUtils: CoreDomUtilsProvider, popoverCtrl: PopoverController,\n            protected timeUtils: CoreTimeUtilsProvider, protected lessonProvider: AddonModLessonProvider,\n            protected lessonHelper: AddonModLessonHelperProvider, protected lessonSync: AddonModLessonSyncProvider,\n            protected lessonOfflineProvider: AddonModLessonOfflineProvider, protected cdr: ChangeDetectorRef,\n            modalCtrl: ModalController, protected navCtrl: NavController, protected appProvider: CoreAppProvider,\n            protected utils: CoreUtilsProvider, protected urlUtils: CoreUrlUtilsProvider, protected fb: FormBuilder,\n            protected mmApp: MoodleMobileApp) {\n\n        this.lessonId = navParams.get('lessonId');\n        this.courseId = navParams.get('courseId');\n        this.password = navParams.get('password');\n        this.review = !!navParams.get('review');\n        this.currentPage = navParams.get('pageId');\n\n        // Block the lesson so it cannot be synced.\n        this.syncProvider.blockOperation(this.component, this.lessonId);\n\n        // Create the navigation modal.\n        this.menuModal = modalCtrl.create('AddonModLessonMenuModalPage', {\n            page: this\n        }, { cssClass: 'core-modal-lateral',\n            showBackdrop: true,\n            enableBackdropDismiss: true,\n            enterAnimation: 'core-modal-lateral-transition',\n            leaveAnimation: 'core-modal-lateral-transition' });\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Fetch the Lesson data.\n        this.fetchLessonData().then((success) => {\n            if (success) {\n                // Review data loaded or new retake started, remove any retake being finished in sync.\n                this.lessonSync.deleteRetakeFinishedInSync(this.lessonId);\n            }\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        // Unblock the lesson so it can be synced.\n        this.syncProvider.unblockOperation(this.component, this.lessonId);\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return Resolved if we can leave it, rejected if not.\n     */\n    async ionViewCanLeave(): Promise<void> {\n        if (this.forceLeave) {\n            return;\n        }\n\n        if (this.question && !this.eolData && !this.processData && this.originalData) {\n            // Question shown. Check if there is any change.\n            if (!this.utils.basicLeftCompare(this.questionForm.getRawValue(), this.originalData, 3)) {\n                 await this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n            }\n        }\n\n        this.domUtils.triggerFormCancelledEvent(this.formElement, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Runs when the page is about to leave and no longer be the active page.\n     */\n    ionViewWillLeave(): void {\n        this.mmApp.closeModal();\n    }\n\n    /**\n     * A button was clicked.\n     *\n     * @param data Button data.\n     */\n    buttonClicked(data: any): void {\n        this.processPage(data);\n    }\n\n    /**\n     * Call a function and go offline if allowed and the call fails.\n     *\n     * @param func Function to call.\n     * @param args Arguments to pass to the function.\n     * @param options Options passed to the function (also included in args).\n     * @return Promise resolved in success, rejected otherwise.\n     */\n    protected callFunction(func: Function, args: any[], options: any): Promise<any> {\n        return func.apply(func, args).catch((error) => {\n            if (!this.offline && !this.review && this.lessonProvider.isLessonOffline(this.lesson) &&\n                    !this.utils.isWebServiceError(error)) {\n                // If it fails, go offline.\n                this.offline = true;\n\n                // Get the possible jumps now.\n                return this.lessonProvider.getPagesPossibleJumps(this.lesson.id, {\n                    cmId: this.lesson.coursemodule,\n                    readingStrategy: CoreSitesReadingStrategy.PreferCache,\n                }).then((jumpList) => {\n                    this.jumps = jumpList;\n\n                    // Call the function again with offline mode and the new jumps.\n                    options.readingStrategy = CoreSitesReadingStrategy.PreferCache;\n                    options.jumps = this.jumps;\n                    options.offline = true;\n\n                    return func.apply(func, args);\n                });\n            }\n\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Change the page from menu or when continuing from a feedback page.\n     *\n     * @param pageId Page to load.\n     * @param ignoreCurrent If true, allow loading current page.\n     */\n    changePage(pageId: number, ignoreCurrent?: boolean): void {\n        if (!ignoreCurrent && !this.eolData && this.currentPage == pageId) {\n            // Page already loaded, stop.\n            return;\n        }\n\n        this.loaded = true;\n        this.messages = [];\n\n        this.loadPage(pageId).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error loading page');\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Get the lesson data and load the page.\n     *\n     * @return Promise resolved with true if success, resolved with false otherwise.\n     */\n    protected fetchLessonData(): Promise<boolean> {\n        // Wait for any ongoing sync to finish. We won't sync a lesson while it's being played.\n        return this.lessonSync.waitForSync(this.lessonId).then(() => {\n            return this.lessonProvider.getLessonById(this.courseId, this.lessonId);\n        }).then((lessonData) => {\n            this.lesson = lessonData;\n            this.title = this.lesson.name; // Temporary title.\n\n            // If lesson has offline data already, use offline mode.\n            return this.lessonOfflineProvider.hasOfflineData(this.lessonId);\n        }).then((offlineMode) => {\n            this.offline = offlineMode;\n\n            if (!offlineMode && !this.appProvider.isOnline() && this.lessonProvider.isLessonOffline(this.lesson) && !this.review) {\n                // Lesson doesn't have offline data, but it allows offline and the device is offline. Use offline mode.\n                this.offline = true;\n            }\n\n            const options = {\n                cmId: this.lesson.coursemodule,\n                readingStrategy: this.offline ? CoreSitesReadingStrategy.PreferCache : CoreSitesReadingStrategy.OnlyNetwork,\n            };\n\n            return this.callFunction(this.lessonProvider.getAccessInformation.bind(this.lessonProvider),\n                    [this.lesson.id, options], options);\n        }).then((info) => {\n            const promises = [];\n\n            this.accessInfo = info;\n            this.canManage = info.canmanage;\n            this.retake = info.attemptscount;\n            this.showRetake = !this.currentPage && this.retake > 0; // Only show it in first page if it isn't the first retake.\n\n            if (info.preventaccessreasons && info.preventaccessreasons.length) {\n                // If it's a password protected lesson and we have the password, allow playing it.\n                const preventReason = this.lessonProvider.getPreventAccessReason(info, !!this.password, this.review);\n                if (preventReason) {\n                    // Lesson cannot be played, show message and go back.\n                    return Promise.reject(preventReason.message);\n                }\n            }\n\n            if (this.review && this.navParams.get('retake') != info.attemptscount - 1) {\n                // Reviewing a retake that isn't the last one. Error.\n                return Promise.reject(this.translate.instant('addon.mod_lesson.errorreviewretakenotlast'));\n            }\n\n            if (this.password) {\n                // Lesson uses password, get the whole lesson object.\n                const options = {\n                    password: this.password,\n                    cmId: this.lesson.coursemodule,\n                    readingStrategy: this.offline ? CoreSitesReadingStrategy.PreferCache : CoreSitesReadingStrategy.OnlyNetwork,\n                };\n                promises.push(this.callFunction(this.lessonProvider.getLessonWithPassword.bind(this.lessonProvider),\n                        [this.lesson.id, options], options).then((lesson) => {\n                    this.lesson = lesson;\n                }));\n            }\n\n            if (this.offline) {\n                // Offline mode, get the list of possible jumps to allow navigation.\n                promises.push(this.lessonProvider.getPagesPossibleJumps(this.lesson.id, {\n                    cmId: this.lesson.coursemodule,\n                    readingStrategy: CoreSitesReadingStrategy.PreferCache,\n                }).then((jumpList) => {\n                    this.jumps = jumpList;\n                }));\n            }\n\n            return Promise.all(promises);\n        }).then(() => {\n            this.mediaFile = this.lesson.mediafiles && this.lesson.mediafiles[0];\n\n            this.lessonWidth = this.lesson.slideshow ? this.domUtils.formatPixelsSize(this.lesson.mediawidth) : '';\n            this.lessonHeight = this.lesson.slideshow ? this.domUtils.formatPixelsSize(this.lesson.mediaheight) : '';\n\n            return this.launchRetake(this.currentPage);\n        }).then(() => {\n            return true;\n        }).catch((error) => {\n            // An error occurred.\n            let promise;\n\n            if (this.review && this.navParams.get('retake') && this.utils.isWebServiceError(error)) {\n                // The user cannot review the retake. Unmark the retake as being finished in sync.\n                promise = this.lessonSync.deleteRetakeFinishedInSync(this.lessonId);\n            } else {\n                promise = Promise.resolve();\n            }\n\n            return promise.then(() => {\n                this.domUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n                this.forceLeave = true;\n                this.navCtrl.pop();\n\n                return false;\n            });\n        });\n    }\n\n    /**\n     * Finish the retake.\n     *\n     * @param outOfTime Whether the retake is finished because the user ran out of time.\n     * @return Promise resolved when done.\n     */\n    protected finishRetake(outOfTime?: boolean): Promise<any> {\n        let promise;\n\n        this.messages = [];\n\n        if (this.offline && this.appProvider.isOnline()) {\n            // Offline mode but the app is online. Try to sync the data.\n            promise = this.lessonSync.syncLesson(this.lesson.id, true, true).then((result) => {\n                if (result.warnings && result.warnings.length) {\n                    const error = result.warnings[0];\n\n                    // Some data was deleted. Check if the retake has changed.\n                    return this.lessonProvider.getAccessInformation(this.lesson.id, {\n                        cmId: this.lesson.coursemodule,\n                    }).then((info) => {\n                        if (info.attemptscount != this.accessInfo.attemptscount) {\n                            // The retake has changed. Leave the view and show the error.\n                            this.forceLeave = true;\n                            this.navCtrl.pop();\n\n                            return Promise.reject(error);\n                        }\n\n                        // Retake hasn't changed, show the warning and finish the retake in offline.\n                        this.offline = false;\n                        this.domUtils.showErrorModal(error);\n                    });\n                }\n\n                this.offline = false;\n            }, () => {\n                // Ignore errors.\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n            // Now finish the retake.\n            const options = {\n                password: this.password,\n                outOfTime,\n                review: this.review,\n                offline: this.offline,\n                accessInfo: this.accessInfo,\n            };\n            const args = [this.lesson, this.courseId, options];\n\n            return this.callFunction(this.lessonProvider.finishRetake.bind(this.lessonProvider), args, options);\n        }).then((data) => {\n            this.title = this.lesson.name;\n            this.eolData = data.data;\n            this.messages = this.messages.concat(data.messages);\n            this.processData = undefined;\n\n            this.eventsProvider.trigger(CoreEventsProvider.ACTIVITY_DATA_SENT, { module: 'lesson' });\n\n            // Format activity link if present.\n            if (this.eolData && this.eolData.activitylink) {\n                this.eolData.activitylink.value = this.lessonHelper.formatActivityLink(this.eolData.activitylink.value);\n            }\n\n            // Format review lesson if present.\n            if (this.eolData && this.eolData.reviewlesson) {\n                const params = this.urlUtils.extractUrlParams(this.eolData.reviewlesson.value);\n\n                if (!params || !params.pageid) {\n                    // No pageid in the URL, the user cannot review (probably didn't answer any question).\n                    delete this.eolData.reviewlesson;\n                } else {\n                    this.eolData.reviewlesson.pageid = params.pageid;\n                }\n            }\n        });\n    }\n\n    /**\n     * Jump to a certain page after performing an action.\n     *\n     * @param pageId The page to load.\n     * @return Promise resolved when done.\n     */\n    protected jumpToPage(pageId: number): Promise<any> {\n        if (pageId === 0) {\n            // Not a valid page, return to entry view.\n            // This happens, for example, when the user clicks to go to previous page and there is no previous page.\n            this.forceLeave = true;\n            this.navCtrl.pop();\n\n            return Promise.resolve();\n        } else if (pageId == AddonModLessonProvider.LESSON_EOL) {\n            // End of lesson reached.\n            return this.finishRetake();\n        }\n\n        // Load new page.\n        this.messages = [];\n\n        return this.loadPage(pageId);\n    }\n\n    /**\n     * Start or continue a retake.\n     *\n     * @param pageId The page to load.\n     * @return Promise resolved when done.\n     */\n    protected launchRetake(pageId: number): Promise<any> {\n        let promise;\n\n        if (this.review) {\n            // Review mode, no need to launch the retake.\n            promise = Promise.resolve({});\n        } else if (!this.offline) {\n            // Not in offline mode, launch the retake.\n            promise = this.lessonProvider.launchRetake(this.lesson.id, this.password, pageId);\n        } else {\n            // Check if there is a finished offline retake.\n            promise = this.lessonOfflineProvider.hasFinishedRetake(this.lesson.id).then((finished) => {\n                if (finished) {\n                    // Always show EOL page.\n                    pageId = AddonModLessonProvider.LESSON_EOL;\n                }\n\n                return {};\n            });\n        }\n\n        return promise.then((data) => {\n            this.currentPage = pageId || this.accessInfo.firstpageid;\n            this.messages = data.messages || [];\n\n            if (this.lesson.timelimit && !this.accessInfo.canmanage) {\n                // Get the last lesson timer.\n                return this.lessonProvider.getTimers(this.lesson.id, {\n                    cmId: this.lesson.coursemodule,\n                    readingStrategy: CoreSitesReadingStrategy.OnlyNetwork,\n                }).then((timers) => {\n                    this.endTime = timers[timers.length - 1].starttime + this.lesson.timelimit;\n                });\n            }\n        }).then(() => {\n            return this.loadPage(this.currentPage);\n        });\n    }\n\n    /**\n     * Load the lesson menu.\n     *\n     * @return Promise resolved when done.\n     */\n    protected loadMenu(): Promise<any> {\n        if (this.loadingMenu) {\n            // Already loading.\n            return;\n        }\n\n        this.loadingMenu = true;\n\n        const options = {\n            password: this.password,\n            cmId: this.lesson.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PreferCache : CoreSitesReadingStrategy.OnlyNetwork,\n        };\n        const args = [this.lessonId, options];\n\n        return this.callFunction(this.lessonProvider.getPages.bind(this.lessonProvider), args, options).then((pages) => {\n            this.lessonPages = pages.map((entry) => {\n                return entry.page;\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error loading menu.');\n        }).finally(() => {\n            this.loadingMenu = false;\n        });\n    }\n\n    /**\n     * Load a certain page.\n     *\n     * @param pageId The page to load.\n     * @return Promise resolved when done.\n     */\n    protected loadPage(pageId: number): Promise<any> {\n        if (pageId == AddonModLessonProvider.LESSON_EOL) {\n            // End of lesson reached.\n            return this.finishRetake();\n        }\n\n        const options = {\n            password: this.password,\n            review: this.review,\n            includeContents: true,\n            cmId: this.lesson.coursemodule,\n            readingStrategy: this.offline ? CoreSitesReadingStrategy.PreferCache : CoreSitesReadingStrategy.OnlyNetwork,\n            accessInfo: this.accessInfo,\n            jumps: this.jumps,\n            includeOfflineData: true,\n        };\n        const args = [this.lesson, pageId, options];\n\n        return this.callFunction(this.lessonProvider.getPageData.bind(this.lessonProvider), args, options).then((data) => {\n            if (data.newpageid == AddonModLessonProvider.LESSON_EOL) {\n                // End of lesson reached.\n                return this.finishRetake();\n            }\n\n            this.pageData = data;\n            this.title = data.page.title;\n            this.pageContent = this.lessonHelper.getPageContentsFromPageData(data);\n            this.loaded = true;\n            this.currentPage = pageId;\n            this.messages = this.messages.concat(data.messages);\n\n            // Page loaded, hide EOL and feedback data if shown.\n            this.eolData = this.processData = undefined;\n\n            if (this.lessonProvider.isQuestionPage(data.page.type)) {\n                // Create an empty FormGroup without controls, they will be added in getQuestionFromPageData.\n                this.questionForm = this.fb.group({});\n                this.pageButtons = [];\n                this.question = this.lessonHelper.getQuestionFromPageData(this.questionForm, data);\n                this.originalData = this.questionForm.getRawValue(); // Use getRawValue to include disabled values.\n            } else {\n                this.pageButtons = this.lessonHelper.getPageButtonsFromHtml(data.pagecontent);\n                this.question = undefined;\n                this.originalData = undefined;\n            }\n\n            if (data.displaymenu && !this.displayMenu) {\n                // Load the menu.\n                this.loadMenu();\n            }\n            this.displayMenu = !!data.displaymenu;\n\n            if (!this.firstPageLoaded) {\n                this.firstPageLoaded = true;\n            } else {\n                this.showRetake = false;\n            }\n        });\n    }\n\n    /**\n     * Process a page, sending some data.\n     *\n     * @param data The data to send.\n     * @param formSubmitted Whether a form was submitted.\n     * @return Promise resolved when done.\n     */\n    protected processPage(data: any, formSubmitted?: boolean): Promise<any> {\n        this.loaded = false;\n\n        const options = {\n            password: this.password,\n            review: this.review,\n            offline: this.offline,\n            accessInfo: this.accessInfo,\n            jumps: this.jumps,\n        };\n        const args = [this.lesson, this.courseId, this.pageData, data, options];\n\n        return this.callFunction(this.lessonProvider.processPage.bind(this.lessonProvider), args, options).then((result) => {\n            if (formSubmitted) {\n                this.domUtils.triggerFormSubmittedEvent(this.formElement, result.sent, this.sitesProvider.getCurrentSiteId());\n            }\n\n            if (!this.offline && !this.review && this.lessonProvider.isLessonOffline(this.lesson)) {\n                // Lesson allows offline and the user changed some data in server. Update cached data.\n                const retake = this.accessInfo.attemptscount;\n                const options = {\n                    cmId: this.lesson.coursemodule,\n                    readingStrategy: CoreSitesReadingStrategy.OnlyNetwork,\n                };\n\n                if (this.lessonProvider.isQuestionPage(this.pageData.page.type)) {\n                    this.lessonProvider.getQuestionsAttemptsOnline(this.lessonId, retake, options);\n                } else {\n                    this.lessonProvider.getContentPagesViewedOnline(this.lessonId, retake, options);\n                }\n            }\n\n            if (result.nodefaultresponse || result.inmediatejump) {\n                // Don't display feedback or force a redirect to a new page. Load the new page.\n                return this.jumpToPage(result.newpageid);\n            } else {\n\n                // Not inmediate jump, show the feedback.\n                result.feedback = this.lessonHelper.removeQuestionFromFeedback(result.feedback);\n                this.messages = result.messages;\n                this.processData = result;\n                this.processData.buttons = [];\n\n                if (this.lesson.review && !result.correctanswer && !result.noanswer && !result.isessayquestion &&\n                       !result.maxattemptsreached && !result.reviewmode) {\n                    // User can try again, show button to do so.\n                    this.processData.buttons.push({\n                        label: 'addon.mod_lesson.reviewquestionback',\n                        pageId: this.currentPage\n                    });\n                }\n\n                // Button to continue.\n                if (this.lesson.review && !result.correctanswer && !result.noanswer && !result.isessayquestion &&\n                       !result.maxattemptsreached) {\n                    /* If both the \"Yes, I'd like to try again\" and \"No, I just want to go on to the next question\" point to the\n                       same page then don't show the \"No, I just want to go on to the next question\" button. It's confusing. */\n                    if (this.pageData.page.id != result.newpageid) {\n                        // Button to continue the lesson (the page to go is configured by the teacher).\n                        this.processData.buttons.push({\n                            label: 'addon.mod_lesson.reviewquestioncontinue',\n                            pageId: result.newpageid\n                        });\n                    }\n                } else {\n                    this.processData.buttons.push({\n                        label: 'addon.mod_lesson.continue',\n                        pageId: result.newpageid\n                    });\n                }\n            }\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error processing page');\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Review the lesson.\n     *\n     * @param pageId Page to load.\n     */\n    reviewLesson(pageId: number): void {\n        this.loaded = false;\n        this.review = true;\n        this.offline = false; // Don't allow offline mode in review.\n\n        this.loadPage(pageId).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error loading page');\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Submit a question.\n     *\n     * @param e Event.\n     */\n    submitQuestion(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.loaded = false;\n\n        // Use getRawValue to include disabled values.\n        const data = this.lessonHelper.prepareQuestionData(this.question, this.questionForm.getRawValue());\n\n        this.processPage(data, true).finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Time up.\n     */\n    timeUp(): void {\n        // Time up called, hide the timer.\n        this.endTime = undefined;\n        this.loaded = false;\n\n        this.finishRetake(true).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error finishing attempt');\n        }).finally(() => {\n            this.loaded = true;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/lesson/pages/player/player.ts"],"sourceRoot":""}